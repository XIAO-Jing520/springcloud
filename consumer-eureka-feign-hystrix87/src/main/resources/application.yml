server:
  port: 87
spring:
  application:
    name: consumer-eureka82
#单机配置
eureka:
  client:
    register-with-eureka: true    #表识不向注册中心注册自己
    fetch-registry: true   #表示自己就是注册中心，职责是维护服务实例，并不需要去检索服务
    service-url:
      defaultZone: http://host1:6001/eureka   #设置与eureka server交互的地址查询服务和注册服务都需要依赖这个地址
        # 集群版
      #defaultZone: http://host1:6001/eureka,http://host2:6002/eureka

feign:
  client:
    config:
      default: #这里就是指的所有被加载的默认FeignClient实现的服务配置都生效   默认情况下,openFiegn在进行服务调用时,要求服务提供方处理业务逻辑时间必须在1S内返回,
        #如果超过1S没有返回则OpenFeign会直接报错,不会等待服务执行,但是往往在处理复杂业务逻辑是可能会超过1S,因此需要修改OpenFeign的默认服务调用超时时间。
        connectTimeout: 5000
        readTimeout: 5000
  hystrix:
    enabled: false
#
##设置feign客户端超时时间(OpenFeign默认支持ribbon)
#ribbon:
#  #指的是建立连接所用的时间，适用于网络状况正常的情况下,两端连接所用的时间
#  ReadTimeout: 5000
#  #指的是建立连接后从服务器读取到可用资源所用的时间
#  ConnectTimeout: 5000

#feign:
#  client:
#    config:
#      default: #这里就是指的所有被加载的默认FeignClient实现的服务配置都生效   默认情况下,openFiegn在进行服务调用时,要求服务提供方处理业务逻辑时间必须在1S内返回,
#               #如果超过1S没有返回则OpenFeign会直接报错,不会等待服务执行,但是往往在处理复杂业务逻辑是可能会超过1S,因此需要修改OpenFeign的默认服务调用超时时间。
#        connectTimeout: 5000
#        readTimeout: 5000
#logging:
#  level:
#    com.xiao.service.PaymentService: debug

#集群配置
#eureka:
#  client:
#    #表示是否将自己注册进EurekaServer默认为true。
#    register-with-eureka: true
#    #是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
#    fetchRegistry: true
#    service-url:
#      #单机版
#      #      defaultZone: http://localhost:7001/eureka
#      # 集群版
#      #defaultZone: http://eureka6001.com:6001,http://eureka6002.com:6002
#  instance:
#    instance-id: payment8001
#    #访问路径可以显示IP地址
#    prefer-ip-address: true
#    #Eureka客户端向服务端发送心跳的时间间隔，单位为秒(默认是30秒)
#    #lease-renewal-interval-in-seconds: 1
#    #Eureka服务端在收到最后一次心跳后等待时间上限，单位为秒(默认是90秒)，超时将剔除服务

#    #lease-expiration-duration-in-seconds: 2